{
    "swagger": "2.0",
    "info": {
        "title": "52Â°North Series API",
        "description": "Thin Web binding API to access series data",
        "version": "2.0.0"
    },
    "host": "example.org",
    "schemes": [
        "https"
    ],
    "basePath": "/api/v1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/": {
            "get": {
                "summary": "Available endpoints.",
                "description": "A (static) collection of endpoints available from this API. Each includes\na relative path and a short description.\n",
                "tags": [
                    "general"
                ],
                "responses": {
                    "200": {
                        "description": "A collection of API endpoints"
                    }
                }
            }
        },
        "/search": {
            "get": {
                "summary": "A simple search.",
                "description": "A simple search over all resource's labels over all available endpoints.\nNote that the searching respects the current locale being selected.\n",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Term which shall match (case insensitive) a resource's label",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/localeParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of search results"
                    }
                }
            }
        },
        "/platforms": {
            "get": {
                "summary": "Available Platforms",
                "description": "Lorem Ipsum\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/localeParam"
                    },
                    {
                        "$ref": "#/parameters/expandedParam"
                    },
                    {
                        "$ref": "#/parameters/servicesParam"
                    },
                    {
                        "$ref": "#/parameters/categoriesParam"
                    },
                    {
                        "$ref": "#/parameters/phenomenaParam"
                    },
                    {
                        "$ref": "#/parameters/proceduresParam"
                    },
                    {
                        "$ref": "#/parameters/offeringsParam"
                    },
                    {
                        "$ref": "#/parameters/platformsParam"
                    },
                    {
                        "$ref": "#/parameters/stationsParam"
                    },
                    {
                        "$ref": "#/parameters/platformTypesParam"
                    },
                    {
                        "$ref": "#/parameters/datasetTypesParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of platforms"
                    }
                }
            }
        },
        "/platforms/{platformId}": {
            "get": {
                "summary": "Gets a particular platform",
                "description": "Lorem Ipsum\n",
                "parameters": [
                    {
                        "name": "platformId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/localeParam"
                    },
                    {
                        "$ref": "#/parameters/crsParam"
                    },
                    {
                        "$ref": "#/parameters/bboxParam"
                    },
                    {
                        "$ref": "#/parameters/nearParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An expanded platform"
                    }
                }
            }
        },
        "/stations": {
            "get": {
                "summary": "Available Stations",
                "description": "Lorem Ipsum\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/localeParam"
                    },
                    {
                        "$ref": "#/parameters/expandedParam"
                    },
                    {
                        "$ref": "#/parameters/servicesParam"
                    },
                    {
                        "$ref": "#/parameters/categoriesParam"
                    },
                    {
                        "$ref": "#/parameters/phenomenaParam"
                    },
                    {
                        "$ref": "#/parameters/proceduresParam"
                    },
                    {
                        "$ref": "#/parameters/offeringsParam"
                    },
                    {
                        "$ref": "#/parameters/platformsParam"
                    },
                    {
                        "$ref": "#/parameters/stationsParam"
                    },
                    {
                        "$ref": "#/parameters/platformTypesParam"
                    },
                    {
                        "$ref": "#/parameters/datasetTypesParam"
                    },
                    {
                        "$ref": "#/parameters/crsParam"
                    },
                    {
                        "$ref": "#/parameters/bboxParam"
                    },
                    {
                        "$ref": "#/parameters/nearParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of stations"
                    }
                }
            }
        },
        "/stations/{stationId}": {
            "get": {
                "summary": "Gets a particular station",
                "description": "Lorem Ipsum\n",
                "parameters": [
                    {
                        "name": "stationId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/localeParam"
                    },
                    {
                        "$ref": "#/parameters/crsParam"
                    },
                    {
                        "$ref": "#/parameters/bboxParam"
                    },
                    {
                        "$ref": "#/parameters/nearParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An expanded station"
                    }
                }
            }
        },
        "/datasets": {
            "get": {
                "summary": "Gets available datasets",
                "description": "Lorem Ipsum\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/localeParam"
                    },
                    {
                        "$ref": "#/parameters/expandedParam"
                    },
                    {
                        "$ref": "#/parameters/servicesParam"
                    },
                    {
                        "$ref": "#/parameters/categoriesParam"
                    },
                    {
                        "$ref": "#/parameters/phenomenaParam"
                    },
                    {
                        "$ref": "#/parameters/proceduresParam"
                    },
                    {
                        "$ref": "#/parameters/offeringsParam"
                    },
                    {
                        "$ref": "#/parameters/platformsParam"
                    },
                    {
                        "$ref": "#/parameters/stationsParam"
                    },
                    {
                        "$ref": "#/parameters/platformTypesParam"
                    },
                    {
                        "$ref": "#/parameters/datasetTypesParam"
                    },
                    {
                        "$ref": "#/parameters/crsParam"
                    },
                    {
                        "$ref": "#/parameters/bboxParam"
                    },
                    {
                        "$ref": "#/parameters/nearParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of datasets"
                    }
                }
            }
        },
        "/datasets/{datasetId}": {
            "get": {
                "summary": "Gets a particular datasets",
                "description": "Lorem Ipsum\n",
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/localeParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "An expanded dataset"
                    }
                }
            }
        },
        "/datasets/{datasetId}/extras": {
            "get": {
                "summary": "Gets extra infos for dataset",
                "description": "Lists extra metadata which may vary from instance to instance. The available \nmetadata fields are listed in the `extras` metadata field of eacg dataset.\nYou can query just the ones you are interested in by appending the `fields` \nquery parameter and passing a comma-separated value list to it. \n",
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of (selected) extra infos"
                    }
                }
            }
        },
        "/datasets/{datasetId}/{interval}": {
            "get": {
                "summary": "Gets extra infos for dataset",
                "description": "Returns a pre-rendered image of a dataset for the given interval. Allowed interval values are\n\n* `lastDay.png`\n* `lastWeek.png`\n* `lastMonth.png`\n\nDatasets of type `measurement` can be pre-rendered by a regular task. If pre-rendering \nis enabled for a given datasets depends on the API provider as it is a configuration issue.\n\nIf a datasets has no pre-rendered chart a `404` (Resource not found) error is returned. In \nparticular cases this is also true when the chart is currently being re-rendered.\n",
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "interval",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of (selected) extra infos"
                    }
                }
            }
        },
        "/datasets/{datasetId}/data": {
            "get": {
                "summary": "Gets data of a dataset",
                "description": "Gets data for a given `timespan` filter. Implementations may limit the maximum amount of\ntime intervals a client can query in one request. \n\nWhat Mime-Types are supported depends on the `datasetType`. For example `measurement` \nobservations can be drawn as a timeseries chart (i.e. either `image/png` or `application/pdf`).\n\nSupported Mime-Types are listed for each `datasetType` when querying \n`/service/{serviceId}?datasetTypes=all`\n",
                "parameters": [
                    {
                        "name": "datasetId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/expandedParam"
                    },
                    {
                        "$ref": "#/parameters/timespanParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data for a given `timespan` in a requested output format"
                    },
                    "400": {
                        "description": "Given parameters are not valid"
                    }
                }
            }
        },
        "/timeseries": {
            "get": {
                "summary": "Gets available timeseries",
                "description": "A collection of timeseries (i.e. datasets of type `measurement` which\nhave been observed at `stationary`, `insitu` platforms having a \n0-dimensional (POINT) location geometry.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/localeParam"
                    },
                    {
                        "$ref": "#/parameters/expandedParam"
                    },
                    {
                        "$ref": "#/parameters/servicesParam"
                    },
                    {
                        "$ref": "#/parameters/categoriesParam"
                    },
                    {
                        "$ref": "#/parameters/phenomenaParam"
                    },
                    {
                        "$ref": "#/parameters/proceduresParam"
                    },
                    {
                        "$ref": "#/parameters/offeringsParam"
                    },
                    {
                        "$ref": "#/parameters/platformsParam"
                    },
                    {
                        "$ref": "#/parameters/stationsParam"
                    },
                    {
                        "$ref": "#/parameters/platformTypesParam"
                    },
                    {
                        "$ref": "#/parameters/datasetTypesParam"
                    },
                    {
                        "$ref": "#/parameters/crsParam"
                    },
                    {
                        "$ref": "#/parameters/bboxParam"
                    },
                    {
                        "$ref": "#/parameters/nearParam"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A collection of timeseries"
                    }
                }
            }
        },
        "/timeseries/{timeseriesId}/getData": {
            "get": {
                "summary": "Gets data of a dataset",
                "description": "Gets data for a given `timespan` filter. Implementations may limit the maximum amount of\ntime intervals a client can query in one request. \n\nThis operation does only return data of `measurement` dataset types from `stationary`, \n`insitu` platforms having a 0-dimensional location geometry (`station`). Supported \nMime-Types are `application/json`, `image/png`, `application/pdf`, and `text/csv`.\n",
                "parameters": [
                    {
                        "name": "timeseriesId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/expandedParam"
                    },
                    {
                        "$ref": "#/parameters/timespanParam"
                    },
                    {
                        "$ref": "#/parameters/widthParam"
                    },
                    {
                        "$ref": "#/parameters/heightParam"
                    },
                    {
                        "$ref": "#/parameters/legendParam"
                    },
                    {
                        "$ref": "#/parameters/gridParam"
                    },
                    {
                        "$ref": "#/parameters/generalizeParam"
                    },
                    {
                        "$ref": "#/parameters/force_latest_valuesParam"
                    },
                    {
                        "$ref": "#/parameters/formatParam"
                    },
                    {
                        "$ref": "#/parameters/base64Param"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data for a given `timespan` in a requested output format"
                    },
                    "400": {
                        "description": "Given parameters are not valid"
                    }
                }
            }
        },
        "/history": {
            "get": {
                "summary": "User Activity",
                "description": "The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.",
                "parameters": [
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Offset the list of returned results by this amount. Default is zero."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "format": "int32",
                        "description": "Number of items to retrieve. Default is 5, maximum is 100."
                    }
                ],
                "tags": [
                    "User"
                ],
                "responses": {
                    "200": {
                        "description": "History information for the given user",
                        "schema": {
                            "$ref": "#/definitions/Activities"
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "expandedParam": {
            "name": "expanded",
            "in": "query",
            "type": "boolean",
            "description": "If `true` a list of partially expanded resource items is returned. The expansion provides more \ndetailed information up to a certain point. However, it does not necessarily provide all item \ninformation as one may get when request the resource item itself.\n\nThe expanded works almost only for resource collection. However, exceptions may exist (e.g. \nfor getting raw data). Exceptions are explicitly documented.\n\nThe default is `false`.\n"
        },
        "platformTypesParam": {
            "name": "platformTypes",
            "in": "query",
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv",
            "description": "Filters the resources to get only those related to the platform type filter.\n\nAllowed values are `stationary`, `mobile`, `insitu`, `remote`, `all`\n\nThe default is `stationary,insitu`.\n"
        },
        "datasetTypesParam": {
            "name": "datasetTypes",
            "in": "query",
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv",
            "description": "Filters the resources to get only those related to the dataset type filter.\n\nAllowed values are `measurement`, `count`, `text`, `all` or any other custom types given by the \nimplementing backend.\n\nThe default is `measurement`.\n"
        },
        "servicesParam": {
            "name": "services",
            "in": "query",
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv",
            "description": "All resources where the given service id does match. The single form (`service`) is kept for backwards\ncompatibility. Please use the plural form to filter on multiple ids.\n"
        },
        "categoriesParam": {
            "name": "categories",
            "in": "query",
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv",
            "description": "All resources where the given category id does match. The single form (`category`) is kept for backwards\ncompatibility. Please use the plural form to filter on multiple ids.\n"
        },
        "phenomenaParam": {
            "name": "phenomena",
            "in": "query",
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv",
            "description": "All resources where the given phenomenon id does match. The single form (`phenomenon`) is kept for backwards\ncompatibility. Please use the plural form to filter on multiple ids.\n"
        },
        "proceduresParam": {
            "name": "procedures",
            "in": "query",
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv",
            "description": "All resources where the given procedure id does match. The single form (`procedure`) is kept for backwards\ncompatibility. Please use the plural form to filter on multiple ids.\n"
        },
        "offeringsParam": {
            "name": "offerings",
            "in": "query",
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv",
            "description": "All resources where the given offering id does match. The single form (`offering`) is kept for backwards\ncompatibility. Please use the plural form to filter on multiple ids.\n"
        },
        "stationsParam": {
            "name": "stations",
            "in": "query",
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv",
            "description": "All resources where the given station id does match. The single form (`station`) is kept for backwards\ncompatibility. Please use the plural form to filter on multiple ids.\n"
        },
        "platformsParam": {
            "name": "platforms",
            "in": "query",
            "type": "array",
            "items": {
                "type": "string"
            },
            "collectionFormat": "csv",
            "description": "All resources where the given platform id does match.\n"
        },
        "localeParam": {
            "name": "locale",
            "in": "query",
            "type": "string",
            "description": "Specifies the language as [ISO639](http://en.wikipedia.org/wiki/ISO_639) code. Subdivisions are \nrespected by an `_` , e.g. `en_US` for American English.\n\nThe REST-API should consider the following order to detect a locale\n\n* User-agent (e.g. header information)\n* locale parameter\n\nA fallback language cannot be specified as it depends on the data of the service provider.\n"
        },
        "timespanParam": {
            "name": "timespan",
            "in": "query",
            "type": "string",
            "description": "\"An [ISO8601](http://en.wikipedia.org/wiki/ISO_8601#Time_intervals) formatted period. Only backslash formatted values are supported.\"\n"
        },
        "crsParam": {
            "name": "crs",
            "in": "query",
            "type": "string",
            "description": "The client indicates that input geometries shall be interpreted as being referenced by the\ngiven CRS (for example in case of `crs=EPSG:25832` to \n[ETRS89/UTM zone 32N](http://spatialreference.org/ref/epsg/25832/)).\n\nPer default geometries are referenced by the WGS84 CRS (CRS84, i.e. lon/lat order). If crs\nvalue differs from default, all output geometries are transformed to match the asked CRS.\n\nPlease note that some CRS switch coordinate axes. Double check axes ordering before interpreting \ncoordinates!\n"
        },
        "bboxParam": {
            "name": "bbox",
            "in": "query",
            "type": "string",
            "description": "Stations within a given bounding box (in WGS84 by default). Refer to the crs parameter if a \nnon-default CRS shall be used.\n\n``` \nbbox={\n  \"ll\": {\n    \"type\": \"Point\",\n    \"coordinates\": [<x>,<y>]\n  },\n  \"ur\": {\n    \"type\": \"Point\",\n    \"coordinates\": [<x>,<y>]\n  }\n}\n```\n"
        },
        "nearParam": {
            "name": "near",
            "in": "query",
            "type": "string",
            "description": "Stations within a given bounding box (in WGS84 by default). Refer to the `crs` parameter if a \nnon-default CRS shall be used.\n\n``` \nnear={\n  \"center\": {\n    \"type\": \"Point\",\n    \"coordinates\": [<x>,<y>]\n  },\n  \"radius\":500\n}\n```\n"
        },
        "legendParam": {
            "name": "legend",
            "in": "query",
            "type": "boolean",
            "description": "Indicates if a legend shall be rendered directly on the image output (if `image/png` shall be \nthe output).\n"
        },
        "gridParam": {
            "name": "grid",
            "in": "query",
            "type": "boolean",
            "description": ""
        },
        "widthParam": {
            "name": "width",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "If `image/png` is requested, width determines the width in pixels.\n"
        },
        "heightParam": {
            "name": "height",
            "in": "query",
            "type": "integer",
            "format": "int32",
            "description": "If `image/png` is requested, height determines the height in pixels.\n"
        },
        "generalizeParam": {
            "name": "generalize",
            "in": "query",
            "type": "boolean",
            "description": "Indicates that timeseries data shall be generalized. See generalization section for details.\n"
        },
        "force_latest_valuesParam": {
            "name": "force_latest_values",
            "in": "query",
            "type": "boolean",
            "description": "Can be used to force last value requests on a collection of timeseries.\n\nPlease note that this enforcement (in combination with `expanded=true`) may result \nin long response times as the last value has to be requested for each timeseries of \nthe requested collection. Use this enforcement only on filtered queries.\n"
        },
        "formatParam": {
            "name": "format",
            "in": "query",
            "type": "string",
            "description": "Controls the output format of raw timeseries data. This avoids converting between different \ndata formats on client side which uses a 3rd party chart rendering API. Currently, supported \nformats\n\n  * *tvp* Time value pairs (the default)\n  * *highcharts* [Highcharts](http://www.highcharts.com/) series data format.\n  \nRefer to the Format section for detailed information how the formats will look like.\n"
        },
        "base64Param": {
            "name": "base64",
            "in": "query",
            "type": "boolean",
            "description": "Indicates binary images shall be encoded to a base64 string on server side. This makes it\neasily possible to display images from JavaScript (you would need a byte parsing library \notherwise).\n\nHere is an example how to embed encoded base64 string\n```\n<img src='data:image/png;base64,\" + encodedString + \"' />\n```\n"
        }
    },
    "definitions": {
        "SimpleDataRequest": {
            "type": "object",
            "properties": {
                "datasetIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "StyledDataRequest": {
            "type": "object",
            "required": [
                "styleOptions"
            ],
            "properties": {
                "legend": {
                    "type": "boolean"
                },
                "grid": {
                    "type": "boolean"
                },
                "locale": {
                    "type": "string"
                },
                "width": {
                    "type": "integer",
                    "format": "int32"
                },
                "height": {
                    "type": "integer",
                    "format": "int32"
                },
                "timespan": {
                    "type": "string"
                },
                "styleOptions": {
                    "$ref": "#/definitions/Style"
                }
            }
        },
        "Style": {
            "type": "object",
            "description": "",
            "properties": {
                "chartType": {
                    "type": "string",
                    "enum": [
                        "line",
                        "bar"
                    ]
                }
            }
        },
        "Product": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles."
                },
                "description": {
                    "type": "string",
                    "description": "Description of product."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "capacity": {
                    "type": "string",
                    "description": "Capacity of product. For example, 4 people."
                },
                "image": {
                    "type": "string",
                    "description": "Image URL representing the product."
                }
            }
        },
        "PriceEstimate": {
            "type": "object",
            "properties": {
                "product_id": {
                    "type": "string",
                    "description": "Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles"
                },
                "currency_code": {
                    "type": "string",
                    "description": "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
                },
                "display_name": {
                    "type": "string",
                    "description": "Display name of product."
                },
                "estimate": {
                    "type": "string",
                    "description": "Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \"Metered\" for TAXI."
                },
                "low_estimate": {
                    "type": "number",
                    "description": "Lower bound of the estimated price."
                },
                "high_estimate": {
                    "type": "number",
                    "description": "Upper bound of the estimated price."
                },
                "surge_multiplier": {
                    "type": "number",
                    "description": "Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier."
                }
            }
        },
        "Profile": {
            "type": "object",
            "properties": {
                "first_name": {
                    "type": "string",
                    "description": "First name of the Uber user."
                },
                "last_name": {
                    "type": "string",
                    "description": "Last name of the Uber user."
                },
                "email": {
                    "type": "string",
                    "description": "Email address of the Uber user"
                },
                "picture": {
                    "type": "string",
                    "description": "Image URL of the Uber user."
                },
                "promo_code": {
                    "type": "string",
                    "description": "Promo code of the Uber user."
                }
            }
        },
        "Activity": {
            "type": "object",
            "properties": {
                "uuid": {
                    "type": "string",
                    "description": "Unique identifier for the activity"
                }
            }
        },
        "Activities": {
            "type": "object",
            "properties": {
                "offset": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Position in pagination."
                },
                "limit": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of items to retrieve (100 max)."
                },
                "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Total number of items available."
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Activity"
                    }
                }
            }
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}